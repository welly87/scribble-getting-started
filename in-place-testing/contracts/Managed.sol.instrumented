/// This file is auto-generated by Scribble and shouldn't be edited directly.
/// Use --disarm prior to make any changes.
pragma solidity 0.5.16;

import "./__scribble_ReentrancyUtils.sol";

contract Managed is __scribble_ReentrancyUtils {
    address internal owner;
    mapping(address => bool) internal admins;

    modifier OwnerOnly() {
        assert(owner == msg.sender);
        _;
    }

    modifier AdminOnly() {
        assert(admins[msg.sender]);
        _;
    }

    constructor() public {
        owner = msg.sender;
        admins[owner] = true;
    }

    function addAdminInternal(address addr) internal {
        _original_Managed_addAdminInternal(addr);
        if (!(admins[msg.sender])) {
            emit AssertionFailed("0: only owner can add admins");
            assert(false);
        }
    }

    function _original_Managed_addAdminInternal(address addr) private {
        admins[addr] = true;
    }
}